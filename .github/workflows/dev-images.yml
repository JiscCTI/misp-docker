# SPDX-FileCopyrightText: 2023-2025 Jisc Services Limited
# SPDX-FileContributor: James Ellor
# SPDX-FileContributor: Joe Pitt
#
# SPDX-License-Identifier: GPL-3.0-only
---
env:
  COMPOSE_PROJECT_NAME: misp_dev
jobs:
  run-dev:
    name: Build, Test, and Release (Dev)
    runs-on: ubuntu-latest
    steps:
      - id: pr-comment-start
        if: ${{ github.event_name == 'pull_request' }}
        name: Add Comment to PR (Start)
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Test images for this PR are now being built, see Actions tab for details.'
            })
      - id: checkout
        name: Checkout Project
        uses: actions/checkout@v4
      - id: docker-login
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          username: ${{ vars.DOCKERHUB_USERNAME }}
      - id: setup-buildx
        name: Setup Docker buildx Environment
        uses: docker/setup-buildx-action@v3
      - id: test-env-setup
        name: Configure Environment
        run: |
          sed -i 's/jisccti/${{ vars.DOCKERHUB_ORGANISATION }}/g' docker-compose-dev.yml
          sed -i 's/latest/${{ github.event_name }}_${{ github.sha }}/g' docker-compose-dev.yml
          sed -i 's/jisccti/${{ vars.DOCKERHUB_ORGANISATION }}/g' misp-workers/Dockerfile
          sed -i 's/misp-web/misp-web-dev/g' misp-workers/Dockerfile
          sed -i 's/\${MISP_VERSION}/${{ github.event_name }}_${{ github.sha }}/g' misp-workers/Dockerfile
          cp .github/workflows/actions.env .env
          mkdir -p persistent/$COMPOSE_PROJECT_NAME/gpg persistent/$COMPOSE_PROJECT_NAME/tls
          cat <<EOF > persistent/$COMPOSE_PROJECT_NAME/gpg/import.asc
          ${{ secrets.TEST_PGP_KEY }}
          EOF
          cat <<EOF > persistent/$COMPOSE_PROJECT_NAME/tls/misp.crt
          ${{ secrets.TEST_TLS_CERT }}
          EOF
          cat <<EOF > persistent/$COMPOSE_PROJECT_NAME/tls/misp.key
          ${{ secrets.TEST_TLS_KEY }}
          EOF
          python3 -m venv venv
          ./venv/bin/pip install --upgrade defusedxml requests
      - id: misp_version
        name: Get current MISP version number
        run: echo "MISP_VERSION=$(./venv/bin/python3 ./misp-web/latest.py)" >> $GITHUB_ENV
      - id: modules_version
        name: Get current MISP modules version number
        run: echo "MODULES_VERSION=$(./venv/bin/python3 ./misp-modules/latest.py)" >> $GITHUB_ENV
      - id: shibb_version
        name: Get current Shibboleth SP version number
        run: echo "SHIBB_VERSION=$(./venv/bin/python3 ./misp-shibb-sp/latest.py)" >> $GITHUB_ENV
      - id: print_versions
        name: Image Tag and Upstream Versions
        run: |
          echo "- ${{ vars.DOCKERHUB_ORGANISATION }}/misp-modules-dev:${{ github.event_name }}_${{ github.sha }} using upstream version ${{ env.MODULES_VERSION }}"
          echo "- ${{ vars.DOCKERHUB_ORGANISATION }}/misp-shibb-sp-dev:${{ github.event_name }}_${{ github.sha }} using upstream version v${{ env.SHIBB_VERSION }}"
          echo "- ${{ vars.DOCKERHUB_ORGANISATION }}/misp-web-dev:${{ github.event_name }}_${{ github.sha }} using upstream version ${{ env.MISP_VERSION }}"
          echo "- ${{ vars.DOCKERHUB_ORGANISATION }}/misp-workers-dev:${{ github.event_name }}_${{ github.sha }} using upstream version ${{ env.MISP_VERSION }}"
      
      # Build / Pull Images
      - id: build_modules
        name: Build misp-modules
        run: |
          cd misp-modules
          docker build -t ${{ vars.DOCKERHUB_ORGANISATION }}/misp-modules-dev:${{ github.event_name }}_${{ github.sha }} --build-arg MISP_VERSION="${{ env.MODULES_VERSION }}" .
          cd ..
      - id: build_web
        name: Build misp-web
        run: |
          cd misp-web
          docker build -t ${{ vars.DOCKERHUB_ORGANISATION }}/misp-web-dev:${{ github.event_name }}_${{ github.sha }} --build-arg MISP_VERSION="${{ env.MISP_VERSION }}" .
          cd ..
      - id: build_workers
        name: Build misp-workers
        run: |
          cd misp-workers
          docker build -t ${{ vars.DOCKERHUB_ORGANISATION }}/misp-workers-dev:${{ github.event_name }}_${{ github.sha }} --build-arg MISP_VERSION="${{ env.MISP_VERSION }}" .
          cd ..
      - id: build_shibb
        name: Build misp-shibb-sp
        run: |
          cd misp-shibb-sp
          docker build -t ${{ vars.DOCKERHUB_ORGANISATION }}/misp-shibb-sp-dev:${{ github.event_name }}_${{ github.sha }} --build-arg SHIBB_VERSION="${{ env.SHIBB_VERSION }}" .
          cd ..
      - id: start_test_env
        name: Deploy Test Instance
        run: docker compose up -d
      - continue-on-error: true
        id: initial_setup
        name: Wait for Initial Setup
        run: timeout 30m /bin/bash -c 'while [[ $(docker container ls --format {{.Status}} | grep -P "(unhealthy)|(starting)" | wc -l) -gt 0 ]] ; do sleep 30; done'
      - id: dump_logs
        if: steps.initial_setup.outcome == 'failure'
        name: Dump Container Log
        run: |
          docker compose -f docker-compose-dev.yml logs
          docker compose -f docker-compose-dev.yml down
          docker compose -f docker-compose-dev.yml logs
          docker compose -f docker-compose-dev.yml down
          exit 1
      - id: stop_test_env
        name: Stop MISP
        run: docker compose down
      - id: push-modules
        if: steps.build_modules.outcome == 'success'
        name: Push misp-modules
        run: |
          docker image push ${{ vars.DOCKERHUB_ORGANISATION }}/misp-modules-dev:${{ github.event_name }}_${{ github.sha }}
      - id: push-web
        if: steps.build_web.outcome == 'success'
        name: Push misp-web
        run: |
          docker image push ${{ vars.DOCKERHUB_ORGANISATION }}/misp-web-dev:${{ github.event_name }}_${{ github.sha }}
      - id: push-workers
        if: steps.build_workers.outcome == 'success'
        name: Push misp-workers
        run: |
          docker image push ${{ vars.DOCKERHUB_ORGANISATION }}/misp-workers-dev:${{ github.event_name }}_${{ github.sha }}
      - id: push-shibb
        if: steps.build_shibb.outcome == 'success'
        name: Push misp-shibb-sp
        run: |
          docker image push ${{ vars.DOCKERHUB_ORGANISATION }}/misp-shibb-sp-dev:${{ github.event_name }}_${{ github.sha }}
      - id: pr-comment-done
        if: ${{ github.event_name == 'pull_request' }}
        name: Add Comment to PR (Done)
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'New test images for this PR have been published: `${{ vars.DOCKERHUB_ORGANISATION }}/misp-modules-dev:${{ github.event_name }}_${{ github.sha }}` `${{ vars.DOCKERHUB_ORGANISATION }}/misp-web-dev:${{ github.event_name }}_${{ github.sha }}` `${{ vars.DOCKERHUB_ORGANISATION }}/misp-workers-dev:${{ github.event_name }}_${{ github.sha }}` `${{ vars.DOCKERHUB_ORGANISATION }}/misp-shibb-sp-dev:${{ github.event_name }}_${{ github.sha }}`'
            })
name: Development Images
on:
  workflow_dispatch:
  pull_request:
permissions:
  contents: read
  pull-requests: write