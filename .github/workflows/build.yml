# SPDX-FileCopyrightText: 2023 Jisc Services Limited
# SPDX-FileContributor: Joe Pitt
#
# SPDX-License-Identifier: GPL-3.0-only

name: Build and Publish

on:
  push:
  schedule:
    - cron: '15 */6 * * *'

jobs:
  misp-modules:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: misp-modules
    steps:
      - id: release
        name: Get Latest Version
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          draft: false
          latest: true
          prerelease: false
          repo: MISP/MISP

      - id: docker-login
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          username: ${{ vars.DOCKERHUB_USERNAME }}
        if: steps.release.outcome == 'success'

      - id: image_exists
        continue-on-error: true
        name: Check If Image Exists
        uses: cloudposse/github-action-docker-image-exists@main
        with:
          organization: ${{ vars.DOCKERHUB_ORGANISATION }}
          registry: registry.hub.docker.com
          repository: ${{ env.IMAGE_NAME }}
          tag: ${{ steps.release.outputs.tag_name }}
        if: steps.docker-login.outcome == 'success'

      - id: setup-buildx
        name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2
        if: steps.image_exists.outcome == 'failure'
      
      - id: build-push
        name: Build and Push Image
        uses: docker/build-push-action@v4
        with:
          build-args: MISP_VERSION=${{ steps.release.outputs.tag_name }}
          context: "{{defaultContext}}:${{ env.IMAGE_NAME }}"
          pull: true
          push: true
          tags: ${{ vars.DOCKERHUB_ORGANISATION }}/${{ env.IMAGE_NAME }}:latest , ${{ vars.DOCKERHUB_ORGANISATION }}/${{ env.IMAGE_NAME }}:${{ steps.release.outputs.tag_name }}
        if: steps.setup-buildx.outcome == 'success'

  misp-web:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: misp-web
    steps:
      - id: release
        name: Get Latest Version
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          draft: false
          latest: true
          prerelease: false
          repo: MISP/MISP

      - id: image_exists
        continue-on-error: true
        name: Check If Image Exists
        uses: cloudposse/github-action-docker-image-exists@main
        with:
          organization: ${{ vars.DOCKERHUB_ORGANISATION }}
          registry: registry.hub.docker.com
          repository: ${{ env.IMAGE_NAME }}
          tag: ${{ steps.release.outputs.tag_name }}
        if: steps.release.outcome == 'success'

      - id: docker-login
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          username: ${{ vars.DOCKERHUB_USERNAME }}
        if: steps.image_exists.outcome == 'failure'

      - id: setup-buildx
        name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2
        if: steps.docker-login.outcome == 'success'
      
      - id: build-push
        name: Build and Push Image
        uses: docker/build-push-action@v4
        with:
          build-args: MISP_VERSION=${{ steps.release.outputs.tag_name }}
          context: "{{defaultContext}}:${{ env.IMAGE_NAME }}"
          pull: true
          push: true
          tags: ${{ vars.DOCKERHUB_ORGANISATION }}/${{ env.IMAGE_NAME }}:latest , ${{ vars.DOCKERHUB_ORGANISATION }}/${{ env.IMAGE_NAME }}:${{ steps.release.outputs.tag_name }}
        if: steps.setup-buildx.outcome == 'success'
      
  misp-workers:
    needs: misp-web
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: misp-workers
    steps:
      - id: release
        name: Get Latest Version
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          draft: false
          latest: true
          prerelease: false
          repo: MISP/MISP

      - id: image_exists
        continue-on-error: true
        name: Check If Image Exists
        uses: cloudposse/github-action-docker-image-exists@main
        with:
          organization: ${{ vars.DOCKERHUB_ORGANISATION }}
          registry: registry.hub.docker.com
          repository: ${{ env.IMAGE_NAME }}
          tag: ${{ steps.release.outputs.tag_name }}
        if: steps.release.outcome == 'success'

      - id: docker-login
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          username: ${{ vars.DOCKERHUB_USERNAME }}
        if: steps.image_exists.outcome == 'failure'

      - id: setup-buildx
        name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2
        if: steps.docker-login.outcome == 'success'
      
      - id: build-push
        name: Build and Push Image
        uses: docker/build-push-action@v4
        with:
          build-args: MISP_VERSION=${{ steps.release.outputs.tag_name }}
          context: "{{defaultContext}}:${{ env.IMAGE_NAME }}"
          pull: true
          push: true
          tags: ${{ vars.DOCKERHUB_ORGANISATION }}/${{ env.IMAGE_NAME }}:latest , ${{ vars.DOCKERHUB_ORGANISATION }}/${{ env.IMAGE_NAME }}:${{ steps.release.outputs.tag_name }}
        if: steps.setup-buildx.outcome == 'success'
